import { AfterViewInit, ElementRef, NgZone, OnDestroy } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';
import { Events } from './Events';
export declare class EditorComponent extends Events implements AfterViewInit, ControlValueAccessor, OnDestroy {
    private platformId;
    disabled: any;
    readonly editor: any;
    ngZone: NgZone;
    cloudChannel: string;
    apiKey: string;
    init: Record<string, any> | undefined;
    id: string;
    initialValue: string | undefined;
    inline: boolean | undefined;
    tagName: string | undefined;
    plugins: string | undefined;
    toolbar: string | string[] | null;
    private _elementRef;
    private _element;
    private _disabled;
    private _editor;
    private onTouchedCallback;
    private onChangeCallback;
    constructor(elementRef: ElementRef, ngZone: NgZone, platformId: Object);
    writeValue(value: string | null): void;
    registerOnChange(fn: (_: any) => void): void;
    registerOnTouched(fn: any): void;
    setDisabledState(isDisabled: boolean): void;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    createElement(): void;
    initialise(): void;
    private initEditor;
}
