{"version":3,"sources":["ng://@tinymce/tinymce-angular/TinyMCE.ts","ng://@tinymce/tinymce-angular/editor/Events.ts","ng://@tinymce/tinymce-angular/utils/Utils.ts","ng://@tinymce/tinymce-angular/editor/editor.component.ts","ng://@tinymce/tinymce-angular/utils/ScriptLoader.ts","ng://@tinymce/tinymce-angular/editor/editor.module.ts"],"names":["getTinymce","w","window","undefined","tinymce","Events","this","onBeforePaste","EventEmitter","onBlur","onClick","onContextMenu","onCopy","onCut","onDblclick","onDrag","onDragDrop","onDragEnd","onDragGesture","onDragOver","onDrop","onFocus","onFocusIn","onFocusOut","onKeyDown","onKeyPress","onKeyUp","onMouseDown","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onMouseOver","onMouseUp","onPaste","onSelectionChange","onActivate","onAddUndo","onBeforeAddUndo","onBeforeExecCommand","onBeforeGetContent","onBeforeRenderUI","onBeforeSetContent","onChange","onClearUndos","onDeactivate","onDirty","onExecCommand","onGetContent","onHide","onInit","onLoadContent","onNodeChange","onPostProcess","onPostRender","onPreInit","onPreProcess","onProgressState","onRedo","onRemove","onReset","onSaveContent","onSetAttrib","onObjectResizeStart","onObjectResized","onObjectSelected","onSetContent","onShow","onSubmit","onUndo","onVisualAid","__decorate","Output","validEvents","unique","uuid","prefix","time","Date","getTime","Math","floor","random","String","isTextarea","element","tagName","toLowerCase","normalizePluginArray","plugins","Array","isArray","split","noop","scriptState","listeners","scriptId","scriptLoaded","EDITOR_COMPONENT_VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","EditorComponent","multi","_super","elementRef","ngZone","platformId","_this","call","cloudChannel","apiKey","id","toolbar","_element","onTouchedCallback","onChangeCallback","_elementRef","initialise","bind","__extends","Object","defineProperty","prototype","_disabled","val","_editor","initialized","setMode","writeValue","value","initialValue","setContent","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","init","__assign","readonly","ngAfterViewInit","isPlatformBrowser","inline","createElement","ownerDocument","doc","channel","state","url","callback","push","getElementById","scriptTag","type","addEventListener","src","head","appendChild","injectScriptTag","forEach","ScriptLoader.load","ngOnDestroy","remove","document","style","visibility","nativeElement","initPlugins","inputPlugins","finalInit","target","disabled","concat","setup","editor","on","e","initEditor","runOutsideAngular","initEvent","run","getContent","ctx","eventName","eventEmitter","emit","event","substring","bindHandlers","Input","__decorate$1","Component","selector","template","providers","__param","Inject","PLATFORM_ID","ElementRef","NgZone","EditorModule","__decorate$2","NgModule","imports","CommonModule","FormsModule","declarations","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2017-present, Ephox, Inc.\n *\n * This source code is licensed under the Apache 2 license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nconst getTinymce = () => {\n  const w = typeof window !== 'undefined' ? (window as any) : undefined;\n  return w && w.tinymce ? w.tinymce : null;\n};\n\nexport { getTinymce };\n","import { Output, EventEmitter } from '@angular/core';\n\nexport interface EventObj<T> {\n  event: T;\n  editor: any;\n}\n\nexport class Events {\n  @Output() public onBeforePaste: EventEmitter<EventObj<ClipboardEvent>> = new EventEmitter();\n  @Output() public onBlur: EventEmitter<EventObj<FocusEvent>> = new EventEmitter();\n  @Output() public onClick: EventEmitter<EventObj<MouseEvent>> = new EventEmitter();\n  @Output() public onContextMenu: EventEmitter<EventObj<MouseEvent>> = new EventEmitter();\n  @Output() public onCopy: EventEmitter<EventObj<ClipboardEvent>> = new EventEmitter();\n  @Output() public onCut: EventEmitter<EventObj<ClipboardEvent>> = new EventEmitter();\n  @Output() public onDblclick: EventEmitter<EventObj<MouseEvent>> = new EventEmitter();\n  @Output() public onDrag: EventEmitter<EventObj<DragEvent>> = new EventEmitter();\n  @Output() public onDragDrop: EventEmitter<EventObj<DragEvent>> = new EventEmitter();\n  @Output() public onDragEnd: EventEmitter<EventObj<DragEvent>> = new EventEmitter();\n  @Output() public onDragGesture: EventEmitter<EventObj<DragEvent>> = new EventEmitter();\n  @Output() public onDragOver: EventEmitter<EventObj<DragEvent>> = new EventEmitter();\n  @Output() public onDrop: EventEmitter<EventObj<DragEvent>> = new EventEmitter();\n  @Output() public onFocus: EventEmitter<EventObj<FocusEvent>> = new EventEmitter();\n  @Output() public onFocusIn: EventEmitter<EventObj<FocusEvent>> = new EventEmitter();\n  @Output() public onFocusOut: EventEmitter<EventObj<FocusEvent>> = new EventEmitter();\n  @Output() public onKeyDown: EventEmitter<EventObj<KeyboardEvent>> = new EventEmitter();\n  @Output() public onKeyPress: EventEmitter<EventObj<KeyboardEvent>> = new EventEmitter();\n  @Output() public onKeyUp: EventEmitter<EventObj<KeyboardEvent>> = new EventEmitter();\n  @Output() public onMouseDown: EventEmitter<EventObj<MouseEvent>> = new EventEmitter();\n  @Output() public onMouseEnter: EventEmitter<EventObj<MouseEvent>> = new EventEmitter();\n  @Output() public onMouseLeave: EventEmitter<EventObj<MouseEvent>> = new EventEmitter();\n  @Output() public onMouseMove: EventEmitter<EventObj<MouseEvent>> = new EventEmitter();\n  @Output() public onMouseOut: EventEmitter<EventObj<MouseEvent>> = new EventEmitter();\n  @Output() public onMouseOver: EventEmitter<EventObj<MouseEvent>> = new EventEmitter();\n  @Output() public onMouseUp: EventEmitter<EventObj<MouseEvent>> = new EventEmitter();\n  @Output() public onPaste: EventEmitter<EventObj<ClipboardEvent>> = new EventEmitter();\n  @Output() public onSelectionChange: EventEmitter<EventObj<Event>> = new EventEmitter();\n  @Output() public onActivate: EventEmitter<EventObj<any>> = new EventEmitter();\n  @Output() public onAddUndo: EventEmitter<EventObj<any>> = new EventEmitter();\n  @Output() public onBeforeAddUndo: EventEmitter<EventObj<any>> = new EventEmitter();\n  @Output() public onBeforeExecCommand: EventEmitter<EventObj<any>> = new EventEmitter();\n  @Output() public onBeforeGetContent: EventEmitter<EventObj<any>> = new EventEmitter();\n  @Output() public onBeforeRenderUI: EventEmitter<EventObj<any>> = new EventEmitter();\n  @Output() public onBeforeSetContent: EventEmitter<EventObj<any>> = new EventEmitter();\n  @Output() public onChange: EventEmitter<EventObj<any>> = new EventEmitter();\n  @Output() public onClearUndos: EventEmitter<EventObj<any>> = new EventEmitter();\n  @Output() public onDeactivate: EventEmitter<EventObj<any>> = new EventEmitter();\n  @Output() public onDirty: EventEmitter<EventObj<any>> = new EventEmitter();\n  @Output() public onExecCommand: EventEmitter<EventObj<any>> = new EventEmitter();\n  @Output() public onGetContent: EventEmitter<EventObj<any>> = new EventEmitter();\n  @Output() public onHide: EventEmitter<EventObj<any>> = new EventEmitter();\n  @Output() public onInit: EventEmitter<EventObj<any>> = new EventEmitter();\n  @Output() public onLoadContent: EventEmitter<EventObj<any>> = new EventEmitter();\n  @Output() public onNodeChange: EventEmitter<EventObj<any>> = new EventEmitter();\n  @Output() public onPostProcess: EventEmitter<EventObj<any>> = new EventEmitter();\n  @Output() public onPostRender: EventEmitter<EventObj<any>> = new EventEmitter();\n  @Output() public onPreInit: EventEmitter<EventObj<any>> = new EventEmitter();\n  @Output() public onPreProcess: EventEmitter<EventObj<any>> = new EventEmitter();\n  @Output() public onProgressState: EventEmitter<EventObj<any>> = new EventEmitter();\n  @Output() public onRedo: EventEmitter<EventObj<any>> = new EventEmitter();\n  @Output() public onRemove: EventEmitter<EventObj<any>> = new EventEmitter();\n  @Output() public onReset: EventEmitter<EventObj<any>> = new EventEmitter();\n  @Output() public onSaveContent: EventEmitter<EventObj<any>> = new EventEmitter();\n  @Output() public onSetAttrib: EventEmitter<EventObj<any>> = new EventEmitter();\n  @Output() public onObjectResizeStart: EventEmitter<EventObj<any>> = new EventEmitter();\n  @Output() public onObjectResized: EventEmitter<EventObj<any>> = new EventEmitter();\n  @Output() public onObjectSelected: EventEmitter<EventObj<any>> = new EventEmitter();\n  @Output() public onSetContent: EventEmitter<EventObj<any>> = new EventEmitter();\n  @Output() public onShow: EventEmitter<EventObj<any>> = new EventEmitter();\n  @Output() public onSubmit: EventEmitter<EventObj<any>> = new EventEmitter();\n  @Output() public onUndo: EventEmitter<EventObj<any>> = new EventEmitter();\n  @Output() public onVisualAid: EventEmitter<EventObj<any>> = new EventEmitter();\n}\n\nexport const validEvents: (keyof Events)[] = [\n  'onActivate',\n  'onAddUndo',\n  'onBeforeAddUndo',\n  'onBeforeExecCommand',\n  'onBeforeGetContent',\n  'onBeforeRenderUI',\n  'onBeforeSetContent',\n  'onBeforePaste',\n  'onBlur',\n  'onChange',\n  'onClearUndos',\n  'onClick',\n  'onContextMenu',\n  'onCopy',\n  'onCut',\n  'onDblclick',\n  'onDeactivate',\n  'onDirty',\n  'onDrag',\n  'onDragDrop',\n  'onDragEnd',\n  'onDragGesture',\n  'onDragOver',\n  'onDrop',\n  'onExecCommand',\n  'onFocus',\n  'onFocusIn',\n  'onFocusOut',\n  'onGetContent',\n  'onHide',\n  'onInit',\n  'onKeyDown',\n  'onKeyPress',\n  'onKeyUp',\n  'onLoadContent',\n  'onMouseDown',\n  'onMouseEnter',\n  'onMouseLeave',\n  'onMouseMove',\n  'onMouseOut',\n  'onMouseOver',\n  'onMouseUp',\n  'onNodeChange',\n  'onObjectResizeStart',\n  'onObjectResized',\n  'onObjectSelected',\n  'onPaste',\n  'onPostProcess',\n  'onPostRender',\n  'onPreProcess',\n  'onProgressState',\n  'onRedo',\n  'onRemove',\n  'onReset',\n  'onSaveContent',\n  'onSelectionChange',\n  'onSetAttrib',\n  'onSetContent',\n  'onShow',\n  'onSubmit',\n  'onUndo',\n  'onVisualAid'\n];\n","/**\n * Copyright (c) 2017-present, Ephox, Inc.\n *\n * This source code is licensed under the Apache 2 license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nimport { EventEmitter } from '@angular/core';\nimport { EditorComponent } from '../editor/editor.component';\nimport { validEvents } from '../editor/Events';\n\nconst bindHandlers = (ctx: EditorComponent, editor: any, initEvent: Event): void => {\n  validEvents.forEach((eventName) => {\n    const eventEmitter: EventEmitter<any> = ctx[eventName];\n    if (eventName === 'onInit') {\n      ctx.ngZone.run(() => eventEmitter.emit({ event: initEvent, editor }));\n    } else {\n      editor.on(eventName.substring(2), (event: any) => ctx.ngZone.run(() => eventEmitter.emit({ event, editor })));\n    }\n  });\n};\n\nlet unique = 0;\n\nconst uuid = (prefix: string): string => {\n  const date = new Date();\n  const time = date.getTime();\n  const random = Math.floor(Math.random() * 1000000000);\n\n  unique++;\n\n  return prefix + '_' + random + unique + String(time);\n};\n\nconst isTextarea = (element?: Element): element is HTMLTextAreaElement => {\n  return typeof element !== 'undefined' && element.tagName.toLowerCase() === 'textarea';\n};\n\nconst normalizePluginArray = (plugins?: string | string[]): string[] => {\n  if (typeof plugins === 'undefined' || plugins === '') {\n    return [];\n  }\n\n  return Array.isArray(plugins) ? plugins : plugins.split(' ');\n};\n\nconst mergePlugins = (initPlugins: string | string[], inputPlugins?: string | string[]) =>\n  normalizePluginArray(initPlugins).concat(normalizePluginArray(inputPlugins));\n\n// tslint:disable-next-line:no-empty\nconst noop: (...args: any[]) => void = () => { };\n\nexport {\n  bindHandlers,\n  uuid,\n  isTextarea,\n  normalizePluginArray,\n  mergePlugins,\n  noop\n};\n","import { isPlatformBrowser } from '@angular/common';\nimport { AfterViewInit, Component, ElementRef, forwardRef, Inject, Input, NgZone, OnDestroy, PLATFORM_ID } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { getTinymce } from '../TinyMCE';\nimport * as ScriptLoader from '../utils/ScriptLoader';\nimport { bindHandlers, isTextarea, mergePlugins, uuid, noop } from '../utils/Utils';\nimport { Events } from './Events';\n\nconst scriptState = ScriptLoader.create();\n\nconst EDITOR_COMPONENT_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => EditorComponent),\n  multi: true\n};\n\n@Component({\n  selector: 'editor',\n  template: '<ng-template></ng-template>',\n  styles: [':host { display: block; }'],\n  providers: [EDITOR_COMPONENT_VALUE_ACCESSOR]\n})\nexport class EditorComponent extends Events implements AfterViewInit, ControlValueAccessor, OnDestroy {\n\n  @Input()\n  set disabled(val) {\n    this._disabled = val;\n    if (this._editor && this._editor.initialized) {\n      this._editor.setMode(val ? 'readonly' : 'design');\n    }\n  }\n\n  get disabled() {\n    return this._disabled;\n  }\n\n  get editor() {\n    return this._editor;\n  }\n\n  public ngZone: NgZone;\n\n  @Input() public cloudChannel = '5';\n  @Input() public apiKey = 'no-api-key';\n  @Input() public init: Record<string, any> | undefined;\n  @Input() public id = '';\n  @Input() public initialValue: string | undefined;\n  @Input() public inline: boolean | undefined;\n  @Input() public tagName: string | undefined;\n  @Input() public plugins: string | undefined;\n  @Input() public toolbar: string | string[] | null = null;\n\n  private _elementRef: ElementRef;\n  private _element: Element | undefined = undefined;\n  private _disabled: boolean | undefined;\n  private _editor: any;\n\n  private onTouchedCallback = noop;\n  private onChangeCallback = noop;\n\n  constructor(elementRef: ElementRef, ngZone: NgZone, @Inject(PLATFORM_ID) private platformId: Object) {\n    super();\n    this._elementRef = elementRef;\n    this.ngZone = ngZone;\n    this.initialise = this.initialise.bind(this);\n  }\n\n  public writeValue(value: string | null): void {\n    this.initialValue = value || this.initialValue;\n    value = value || '';\n\n    if (this._editor && this._editor.initialized && typeof value === 'string') {\n      this._editor.setContent(value);\n    }\n  }\n\n  public registerOnChange(fn: (_: any) => void): void {\n    this.onChangeCallback = fn;\n  }\n\n  public registerOnTouched(fn: any): void {\n    this.onTouchedCallback = fn;\n  }\n\n  public setDisabledState(isDisabled: boolean) {\n    if (this._editor) {\n      this._editor.setMode(isDisabled ? 'readonly' : 'design');\n    } else if (isDisabled) {\n      this.init = { ...this.init, readonly: true };\n    }\n  }\n\n  public ngAfterViewInit() {\n    if (isPlatformBrowser(this.platformId)) {\n      this.id = this.id || uuid('tiny-angular');\n      this.inline =\n        typeof this.inline !== 'undefined' ? (typeof this.inline === 'boolean' ? this.inline : true) : this.init && this.init.inline;\n      this.createElement();\n      if (getTinymce() !== null) {\n        this.initialise();\n      } else if (this._element && this._element.ownerDocument) {\n        const doc = this._element.ownerDocument;\n        const channel = this.cloudChannel;\n        const apiKey = this.apiKey;\n\n        ScriptLoader.load(scriptState, doc, `https://cdn.tiny.cloud/1/${apiKey}/tinymce/${channel}/tinymce.min.js`, this.initialise);\n      }\n    }\n  }\n\n  public ngOnDestroy() {\n    if (getTinymce() !== null) {\n      getTinymce().remove(this._editor);\n    }\n  }\n\n  public createElement() {\n    const tagName = typeof this.tagName === 'string' ? this.tagName : 'div';\n    this._element = document.createElement(this.inline ? tagName : 'textarea');\n    if (this._element) {\n      this._element.id = this.id;\n      if (isTextarea(this._element)) {\n        this._element.style.visibility = 'hidden';\n      }\n      this._elementRef.nativeElement.appendChild(this._element);\n    }\n  }\n\n  public initialise() {\n    const finalInit = {\n      ...this.init,\n      target: this._element,\n      inline: this.inline,\n      readonly: this.disabled,\n      plugins: mergePlugins(this.init && this.init.plugins, this.plugins),\n      toolbar: this.toolbar || (this.init && this.init.toolbar),\n      setup: (editor: any) => {\n        this._editor = editor;\n        editor.on('init', (e: Event) => {\n          this.initEditor(e, editor);\n        });\n\n        if (this.init && typeof this.init.setup === 'function') {\n          this.init.setup(editor);\n        }\n      }\n    };\n\n    if (isTextarea(this._element)) {\n      this._element.style.visibility = '';\n    }\n\n    this.ngZone.runOutsideAngular(() => {\n      getTinymce().init(finalInit);\n    });\n  }\n\n  private initEditor(initEvent: Event, editor: any) {\n    if (typeof this.initialValue === 'string') {\n      this.ngZone.run(() => editor.setContent(this.initialValue));\n    }\n    editor.on('blur', () => this.ngZone.run(() => this.onTouchedCallback()));\n    editor.on('change keyup undo redo', () => this.ngZone.run(() => this.onChangeCallback(editor.getContent())));\n    bindHandlers(this, editor, initEvent);\n  }\n}\n","/**\n * Copyright (c) 2017-present, Ephox, Inc.\n *\n * This source code is licensed under the Apache 2 license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nimport { uuid } from './Utils';\n\nexport type callbackFn = () => void;\nexport interface IStateObj {\n  listeners: callbackFn[];\n  scriptId: string;\n  scriptLoaded: boolean;\n}\n\nconst injectScriptTag = (scriptId: string, doc: Document, url: string, callback: callbackFn) => {\n  const scriptTag = doc.createElement('script');\n  scriptTag.type = 'application/javascript';\n  scriptTag.id = scriptId;\n  scriptTag.addEventListener('load', callback);\n  scriptTag.src = url;\n  if (doc.head) {\n    doc.head.appendChild(scriptTag);\n  }\n};\n\nconst create = (): IStateObj => {\n  return {\n    listeners: [],\n    scriptId: uuid('tiny-script'),\n    scriptLoaded: false\n  };\n};\n\nconst load = (state: IStateObj, doc: Document, url: string, callback: callbackFn) => {\n  if (state.scriptLoaded) {\n    callback();\n  } else {\n    state.listeners.push(callback);\n    if (!doc.getElementById(state.scriptId)) {\n      injectScriptTag(state.scriptId, doc, url, () => {\n        state.listeners.forEach((fn) => fn());\n        state.scriptLoaded = true;\n      });\n    }\n  }\n};\n\nexport {\n  create,\n  load\n};","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { EditorComponent } from './editor.component';\n\n@NgModule({\n  imports: [CommonModule, FormsModule],\n  declarations: [EditorComponent],\n  exports: [EditorComponent]\n})\nexport class EditorModule {}\n"]}